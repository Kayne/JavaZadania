/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package paint;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author kayne
 */
public class Program extends javax.swing.JFrame {

    /**
     * Creates new form Program
     */
    public Program() {
        initComponents();
        panelRysunek1.setRodzic(this);
        jFileChooser1.addChoosableFileFilter(new FileNameExtensionFilter("JPG", "jpg"));
        jFileChooser1.addChoosableFileFilter(new FileNameExtensionFilter("GIF", "gif"));
        jFileChooser1.addChoosableFileFilter(new FileNameExtensionFilter("PNG", "png"));
        jFileChooser1.addChoosableFileFilter(new FileNameExtensionFilter("SER", "ser"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jToolBar1 = new javax.swing.JToolBar();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        SpinnerSzerokośćPłótna = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        SpinnerWysokośćPłótna = new javax.swing.JSpinner();
        jButton13 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jSplitPane2 = new javax.swing.JSplitPane();
        koloryScroll = new javax.swing.JScrollPane();
        panelKolorów = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        labelBieżącyKolor = new javax.swing.JLabel();
        płótnoScroll = new javax.swing.JScrollPane();
        panelRysunek1 = new paint.PanelRysunek();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Paint");
        setMinimumSize(new java.awt.Dimension(1180, 400));

        jToolBar1.setRollover(true);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/ikonki/Document.png"))); // NOI18N
        jButton5.setText("Nowy");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/ikonki/Open file.png"))); // NOI18N
        jButton3.setText("Otwórz");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/ikonki/Save.png"))); // NOI18N
        jButton6.setText("Zapisz");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/ikonki/Zoom in.png"))); // NOI18N
        jButton1.setText("Powiększ");
        jButton1.setToolTipText("");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/ikonki/Zoom out.png"))); // NOI18N
        jButton2.setText("Pomniejsz");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/ikonki/Edit.png"))); // NOI18N
        jButton4.setText("Ołówek");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/ikonki/Kolo.png"))); // NOI18N
        jButton7.setText("Koło");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/ikonki/Prostokat.png"))); // NOI18N
        jButton8.setText("Prostokąt");
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton8);

        jCheckBox1.setText("Wypełnij");
        jCheckBox1.setFocusable(false);
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jCheckBox1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jCheckBox1);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/paint/ikonki/Contrast.png"))); // NOI18N
        jButton9.setText("Czarno-Białe");
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton9);

        jLabel1.setText("Szerokość:");
        jToolBar1.add(jLabel1);

        SpinnerSzerokośćPłótna.setMinimumSize(new java.awt.Dimension(77, 28));
        SpinnerSzerokośćPłótna.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinnerSzerokośćPłótnaStateChanged(evt);
            }
        });
        SpinnerSzerokośćPłótna.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                SpinnerSzerokośćPłótnaPropertyChange(evt);
            }
        });
        jToolBar1.add(SpinnerSzerokośćPłótna);

        jLabel2.setText("Wysokość:");
        jToolBar1.add(jLabel2);

        SpinnerWysokośćPłótna.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinnerWysokośćPłótnaStateChanged(evt);
            }
        });
        jToolBar1.add(SpinnerWysokośćPłótna);

        jButton13.setText("Lewy górny");
        jButton13.setFocusable(false);
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton13);

        jButton12.setText("Lewy dolny");
        jButton12.setFocusable(false);
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton12);

        jButton11.setText("Prawy górny");
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton11);

        jButton10.setText("Prawy dolny");
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton10);

        koloryScroll.setMinimumSize(new java.awt.Dimension(100, 23));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setOpaque(true);
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setOpaque(true);
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 0, 0));
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setOpaque(true);
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(51, 255, 0));
        jLabel6.setForeground(new java.awt.Color(51, 255, 0));
        jLabel6.setOpaque(true);
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(255, 255, 102));
        jLabel7.setForeground(new java.awt.Color(255, 255, 102));
        jLabel7.setOpaque(true);
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(0, 51, 255));
        jLabel8.setForeground(new java.awt.Color(0, 51, 255));
        jLabel8.setOpaque(true);
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(204, 204, 204));
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setOpaque(true);
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 153, 51));
        jLabel10.setForeground(new java.awt.Color(255, 153, 51));
        jLabel10.setOpaque(true);
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        jLabel11.setText("<html>Wybierz<br />inny…");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        jLabel12.setText("<html>Obecnie<br />wybrany:");

        labelBieżącyKolor.setOpaque(true);
        labelBieżącyKolor.setBackground(new java.awt.Color(0, 0, 0));

        org.jdesktop.layout.GroupLayout panelKolorówLayout = new org.jdesktop.layout.GroupLayout(panelKolorów);
        panelKolorów.setLayout(panelKolorówLayout);
        panelKolorówLayout.setHorizontalGroup(
            panelKolorówLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelKolorówLayout.createSequentialGroup()
                .add(panelKolorówLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panelKolorówLayout.createSequentialGroup()
                        .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(panelKolorówLayout.createSequentialGroup()
                        .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(panelKolorówLayout.createSequentialGroup()
                        .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(panelKolorówLayout.createSequentialGroup()
                        .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(0, 0, Short.MAX_VALUE))
            .add(panelKolorówLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelKolorówLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(panelKolorówLayout.createSequentialGroup()
                        .add(19, 19, 19)
                        .add(labelBieżącyKolor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        panelKolorówLayout.setVerticalGroup(
            panelKolorówLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelKolorówLayout.createSequentialGroup()
                .add(panelKolorówLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(panelKolorówLayout.createSequentialGroup()
                        .add(panelKolorówLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(panelKolorówLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panelKolorówLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jLabel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(labelBieżącyKolor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 356, Short.MAX_VALUE))
        );

        koloryScroll.setViewportView(panelKolorów);

        jSplitPane2.setLeftComponent(koloryScroll);

        panelRysunek1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                panelRysunek1ComponentResized(evt);
            }
        });

        org.jdesktop.layout.GroupLayout panelRysunek1Layout = new org.jdesktop.layout.GroupLayout(panelRysunek1);
        panelRysunek1.setLayout(panelRysunek1Layout);
        panelRysunek1Layout.setHorizontalGroup(
            panelRysunek1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 1034, Short.MAX_VALUE)
        );
        panelRysunek1Layout.setVerticalGroup(
            panelRysunek1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 368, Short.MAX_VALUE)
        );

        płótnoScroll.setViewportView(panelRysunek1);

        jSplitPane2.setRightComponent(płótnoScroll);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSplitPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1166, Short.MAX_VALUE)
                    .add(jToolBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSplitPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                .add(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        panelRysunek1.utwórzRysunek();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (jFileChooser1.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            try {
                File outputfile = jFileChooser1.getSelectedFile();
                String type = "jpg";
                if (!(jFileChooser1.getFileFilter() == null) && jFileChooser1.getFileFilter().getDescription().equals("SER")) {
                    type = "ser";
                    RysunekSerializator rys = new RysunekSerializator();
                    rys.setRysunek(getRysunek());
                    FileOutputStream fileStream;
                    if (outputfile.getAbsolutePath().split("\\.(?=[^\\.]+$)").length >= 2) {
                        fileStream = new FileOutputStream(outputfile.getAbsoluteFile());
                    } else {
                        fileStream = new FileOutputStream(outputfile.getAbsolutePath() + "." + type);
                    }
                    ObjectOutputStream os = new ObjectOutputStream(fileStream);
                    os.writeObject(rys);
                    os.close();
                } else {
                    if (!(jFileChooser1.getFileFilter() == null) && !jFileChooser1.getFileFilter().getDescription().toLowerCase().equals("all files")) {
                        type = jFileChooser1.getFileFilter().getDescription().toLowerCase();
                    }
                    if (outputfile.getAbsolutePath().split("\\.(?=[^\\.]+$)").length >= 2) {
                        ImageIO.write(getRysunek(), type, new File(outputfile.getAbsolutePath()));
                    } else {
                        ImageIO.write(getRysunek(), type, new File(outputfile.getAbsolutePath() + "." + type));
                    }

                }
            } catch (IOException ex) {
                Logger.getLogger(Program.class.getName()).log(Level.SEVERE, "Wystąpił błąd podczas przetwarzania pliku. Na pewno wybrałeś poprawny plik?", ex);
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jFileChooser1.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            try {
                File outputfile = jFileChooser1.getSelectedFile();
                String[] split = outputfile.getAbsolutePath().split("\\.(?=[^\\.]+$)");
                if (split.length >= 2) {
                    if (split[1].toLowerCase().equals("ser")) {
                        FileInputStream fileStream = new FileInputStream(outputfile);
                        ObjectInputStream os = new ObjectInputStream(fileStream);
                        Object one = os.readObject();
                        RysunekSerializator rys = (RysunekSerializator) one;
                        panelRysunek1.utwórzRysunek(rys.getRysunek());
                    } else {
                        panelRysunek1.utwórzRysunek(outputfile);
                    }
                } else {
                    panelRysunek1.utwórzRysunek(outputfile);
                }
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(Program.class.getName()).log(Level.SEVERE, "Wystąpił błąd podczas przetwarzania pliku. Na pewno wybrałeś poprawny plik?", ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void SpinnerSzerokośćPłótnaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_SpinnerSzerokośćPłótnaPropertyChange
    }//GEN-LAST:event_SpinnerSzerokośćPłótnaPropertyChange

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        panelRysunek1.setBieżącyKolor(Color.black);
        labelBieżącyKolor.setBackground(Color.black);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        panelRysunek1.setBieżącyKolor(Color.white);
        labelBieżącyKolor.setBackground(Color.white);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        panelRysunek1.setBieżącyKolor(Color.red);
        labelBieżącyKolor.setBackground(Color.red);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        panelRysunek1.setBieżącyKolor(Color.green);
        labelBieżącyKolor.setBackground(Color.green);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        panelRysunek1.setBieżącyKolor(Color.yellow);
        labelBieżącyKolor.setBackground(Color.yellow);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        panelRysunek1.setBieżącyKolor(Color.blue);
        labelBieżącyKolor.setBackground(Color.blue);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        panelRysunek1.setBieżącyKolor(Color.gray);
        labelBieżącyKolor.setBackground(Color.gray);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        panelRysunek1.setBieżącyKolor(Color.orange);
        labelBieżącyKolor.setBackground(Color.orange);
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        panelRysunek1.setBieżącyKolor(JColorChooser.showDialog(rootPane, "Wybierz kolor…", Color.black));
        labelBieżącyKolor.setBackground(panelRysunek1.getBieżącyKolor());
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        panelRysunek1.setBieżąceNarzędzie(Narzedzia.OŁÓWEK);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        panelRysunek1.zwiększSkalę();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        panelRysunek1.zmniejszSkalę();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        panelRysunek1.setBieżąceNarzędzie(Narzedzia.KOŁO);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (panelRysunek1.getOdcieńSzarości() == false) {
            panelRysunek1.setOdcieńSzarości(true);
        } else {
            panelRysunek1.setOdcieńSzarości(false);
        }
        panelRysunek1.repaint();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected() == true) {
            panelRysunek1.setZapełnijFigurę(true);
        } else {
            panelRysunek1.setZapełnijFigurę(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void SpinnerSzerokośćPłótnaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinnerSzerokośćPłótnaStateChanged
        panelRysunek1.zmieńRozmiaryRysunka((int) SpinnerSzerokośćPłótna.getValue(), panelRysunek1.getRysunekHeight());
    }//GEN-LAST:event_SpinnerSzerokośćPłótnaStateChanged

    private void SpinnerWysokośćPłótnaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinnerWysokośćPłótnaStateChanged
        panelRysunek1.zmieńRozmiaryRysunka(panelRysunek1.getRysunekWidth(), (int) SpinnerWysokośćPłótna.getValue());
        panelRysunek1.revalidate();
    }//GEN-LAST:event_SpinnerWysokośćPłótnaStateChanged

    private void panelRysunek1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelRysunek1ComponentResized
    }//GEN-LAST:event_panelRysunek1ComponentResized

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        panelRysunek1.setBieżąceNarzędzie(Narzedzia.PROSTOKĄT);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        płótnoScroll.getVerticalScrollBar().setValue(panelRysunek1.getWidth());
        płótnoScroll.getHorizontalScrollBar().setValue(panelRysunek1.getHeight());
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        płótnoScroll.getVerticalScrollBar().setValue(0);
        płótnoScroll.getHorizontalScrollBar().setValue(panelRysunek1.getHeight());
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        płótnoScroll.getVerticalScrollBar().setValue(panelRysunek1.getWidth());
        płótnoScroll.getHorizontalScrollBar().setValue(0);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        płótnoScroll.getVerticalScrollBar().setValue(0);
        płótnoScroll.getHorizontalScrollBar().setValue(0);
    }//GEN-LAST:event_jButton13ActionPerformed

    /**
     * Zwraca referencję do rysunku na panelu.
     *
     * @return rysnek typu BufferedImage
     */
    private BufferedImage getRysunek() {
        return panelRysunek1.getRysunek();
    }

    /**
     * Zwraca referencję do spinnera szerokości.
     *
     * @return spinner
     */
    public javax.swing.JSpinner getSpinnerSzerokośćPłótna() {
        return SpinnerSzerokośćPłótna;
    }

    /**
     * Zwraca referencję do spinnera wysokości.
     *
     * @return spinner
     */
    public javax.swing.JSpinner getSpinnerWysokośćPłótna() {
        return SpinnerWysokośćPłótna;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
            /*for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
             * if ("Nimbus".equals(info.getName())) {
             * javax.swing.UIManager.setLookAndFeel(info.getClassName());
             * break;
             * }
             * }*/
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Program.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Program().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner SpinnerSzerokośćPłótna;
    private javax.swing.JSpinner SpinnerWysokośćPłótna;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JScrollPane koloryScroll;
    private javax.swing.JLabel labelBieżącyKolor;
    private javax.swing.JPanel panelKolorów;
    private paint.PanelRysunek panelRysunek1;
    private javax.swing.JScrollPane płótnoScroll;
    // End of variables declaration//GEN-END:variables
}
