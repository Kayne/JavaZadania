/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gomoku;

import javax.swing.Box;
import javax.swing.JOptionPane;

/**
 *
 * @author kayne
 */
public class MainFrame extends javax.swing.JFrame implements InterfejsUstawien {

    /**
     * Dostęp do ustawień gry.
     */
    private Ustawienia ustawienia;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        ustawienia = new Ustawienia();
        initComponents();
        buttonGroup1.add(jRadioButtonMenuItem1);
        buttonGroup1.add(jRadioButtonMenuItem2);
        nowaPierwszaGra();
    }
    
    /**
     * Zaczyna nową grę podczas ładowania planszy.
     */
    private void nowaPierwszaGra() {
        setSkreśleniePól();
        setOznaczeniePól();
        setKtoZaczyna();
        getPlansza().setEtykieta(jLabel1);
        getPlansza().setUstawienia(ustawienia);
        getPlansza().ustalPlanszę();
    }

    /**
     * Zwraca wskaźnik na JPanel będący planszą.
     * @return Plansza plansza gry
     */
    public Plansza getPlansza() {
        return plansza1;
    }

    /**
     * Ustawia checkbox odpowiadający za Skreślenie Pól na prawdziwy, jeśli tak wskazują ustawienia.
     */
    @Override
    public void setSkreśleniePól() {
        if (ustawienia.isSkreśleniePól() == true) {
            SkreśleniePólCheckBox.setSelected(true);
        }
    }

    /**
     * Ustawia checkbox odpowiadający za Oznaczenie Pól na prawdziwy, jeśli tak wskazują ustawienia.
     */
    @Override
    public void setOznaczeniePól() {
        if (ustawienia.isOznaczeniePól() == true) {
            OznaczeniePólCheckBox.setSelected(true);
        }
    }

    /**
     * Ustawia radio odpowiadające za ustalenie, kto zaczyna partię.
     */
    @Override
    public void setKtoZaczyna() {
        if (ustawienia.isGraczZaczyna() == true) {
            jRadioButtonMenuItem1.setSelected(true);
        } else {
            jRadioButtonMenuItem2.setSelected(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        plansza1 = new gomoku.Plansza();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        OznaczeniePólCheckBox = new javax.swing.JCheckBoxMenuItem();
        SkreśleniePólCheckBox = new javax.swing.JCheckBoxMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 422));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Wynik gry");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        org.jdesktop.layout.GroupLayout plansza1Layout = new org.jdesktop.layout.GroupLayout(plansza1);
        plansza1.setLayout(plansza1Layout);
        plansza1Layout.setHorizontalGroup(
            plansza1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        plansza1Layout.setVerticalGroup(
            plansza1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 328, Short.MAX_VALUE)
        );

        jMenu1.setText("Gra");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Nowa gra");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Koniec");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ustawienia");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        OznaczeniePólCheckBox.setSelected(true);
        OznaczeniePólCheckBox.setText("Oznaczenie pól");
        OznaczeniePólCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OznaczeniePólCheckBoxActionPerformed(evt);
            }
        });
        jMenu2.add(OznaczeniePólCheckBox);

        SkreśleniePólCheckBox.setSelected(true);
        SkreśleniePólCheckBox.setText("Skreślenie pól");
        SkreśleniePólCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SkreśleniePólCheckBoxActionPerformed(evt);
            }
        });
        jMenu2.add(SkreśleniePólCheckBox);

        jMenu4.setText("Zaczyna");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Użytkownik");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("Program");
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jRadioButtonMenuItem2);

        jMenu2.add(jMenu4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Reszta ustawień");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Pomoc");
        jMenu3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenu3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem3.setText("O grze");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("O aplikacji");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(Box.createHorizontalGlue());

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(16, 16, 16)
                .add(plansza1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(16, 16, 16)
                .add(plansza1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Nowa gra
     * @param evt kliknięcie na menu
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        getPlansza().czyśćPlanszęIPrzemaluj();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * Wyłącz program.
     * @param evt kliknięcie menu
     */
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * Wyświetla informacje o programie.
     * @param evt klliknięcie myszką
     */
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        JOptionPane.showMessageDialog(this, "Autor: Marcin „Kayne” Bratek\nWersja: 1.0\nData: Grudzień 2012", "O aplikacji", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
    }//GEN-LAST:event_jMenu2MouseClicked

    /**
     * O grze, wyświetla jej zasady.
     * @param evt kliknięcie myszką
     */
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        JOptionPane.showMessageDialog(this, "Gra Gomoku jest rozgrywana przez dwóch graczy na planszy o wymiarach 19 × 19.\nGracze zajmują pola na przemian, dążąc do objęcia pięciu pól w jednej linii (poziomej, pionowej lub na skos).\nDo zajęcia pola używa się pionów (jeden z graczy używa pionów czarnych a drugi białych).\nPierwszy gracz, który tego dokona, zostaje zwycięzcą.\nPole może być zajęte tylko przez jednego gracza i nie zmienia swego właściciela do końca gry.\nJeśli nie uda się to nikomu (plansza zostanie zapełniona) to jest remis.", "O grze", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * Zmienia ustawienia oznaczenia pól
     * @param evt kliknięcie myszki
     */
    private void OznaczeniePólCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OznaczeniePólCheckBoxActionPerformed
        if (OznaczeniePólCheckBox.isSelected() == true) {
            ustawienia.setOznaczeniePól(true);
            getPlansza().odświeżPlanszę();
        } else if (ustawienia.isOznaczeniePól() == true) {
            ustawienia.setOznaczeniePól(false);
            getPlansza().odświeżPlanszę();
        }
    }//GEN-LAST:event_OznaczeniePólCheckBoxActionPerformed

    /**
     * Zmienia ustawienie skreślenia pól.
     * @param evt kliknięcie myszki
     */
    private void SkreśleniePólCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SkreśleniePólCheckBoxActionPerformed
        if (SkreśleniePólCheckBox.isSelected() == true) {
            ustawienia.setSkreśleniePól(true);
            getPlansza().odświeżPlanszę();
        } else if (ustawienia.isSkreśleniePól() == true) {
            ustawienia.setSkreśleniePól(false);
            getPlansza().odświeżPlanszę();
        }
    }//GEN-LAST:event_SkreśleniePólCheckBoxActionPerformed

    /**
     * Zmienia ustawienie kto zaczyna grę - użytkownik
     * @param evt kliknięcie myszki
     */
    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        ustawienia.setGraczZaczyna(true);
        JOptionPane.showMessageDialog(this, "Zmiana będzie widoczna od nowej gry.", "Zmieniono ustawienia", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    /**
     * Zmienia ustawienie kto zaczyna grę - komputer
     * @param evt kliknięcie myszki
     */
    private void jRadioButtonMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ActionPerformed
        ustawienia.setGraczZaczyna(false);
        JOptionPane.showMessageDialog(this, "Zmiana będzie widoczna od nowej gry.", "Zmieniono ustawienia", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMenuItem2ActionPerformed

    /**
     * Wyświetla okienko z ustawieniami oraz kolorami
     * @param evt kliknięcie myszki
     */
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        new UstawieniaFrame(ustawienia, this).setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * Uruchamia program i rysuje główną ramkę.
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem OznaczeniePólCheckBox;
    private javax.swing.JCheckBoxMenuItem SkreśleniePólCheckBox;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private gomoku.Plansza plansza1;
    // End of variables declaration//GEN-END:variables
}
